// These are comments. 

// This document is the configuration file. Things can be defined in
// different scopes. For example, 'params.variable = "x" ' and 
// 'params{ variable = "x" }' are equivelent, but the second is nicer
// if you're defining a bunch of variables to that same scope.

// Double quotes get interpolation of bash variables, singles don't.

// 'params' are variables that will be accessible the script, using
// that prefix as `params.`
params {

    email_address = "${USER}@nyu.edu"
    experiment_name = "untitled-in-config-file"
    sequencing_platform = "illumina"
    sequencing_machine = "nextseq"

// NOTE that this is how you specify the files you're going to run on.
// It is a glob, meaning it's got a wildcard in there. BECAUSE of 
// that, it REQUIRES single quotes to intepret that too soon.
// TEST your glob on the command line with 'ls', then copy and paste 
// it in here.
    fastq_files_glob = '/scratch/cgsb/gencore/out/Gresham/2015-10-23_HK5NHBGXX/lib1-26/*'
//    fastq_files_glob = '/scratch/cgsb/gencore/out/Gresham/2015-10-23_HK5NHBGXX/lib1-26/*_n0[12]_ntr_[12].fastq.gz'
//    fastq_files_glob = 'test_inputs/*'

// This refers to the prefix fasta that's going to be used by BWA
    reference_prefix = "/scratch/work/cgsb/genomes/Public/Fungi/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa"

// find the below by executing (TODO COPY THAT HERE)
    snpeff_database = "Saccharomyces_cerevisiae"

// Below are the various modules to be loaded, or paths to jars.
// I put the jars in the modules thing.
    modules { 
        BWA        = "bwa/intel/0.7.15" 
        BEDTOOLS   = "bedtools/intel/2.26.0"
        PICARD     = "picard/2.8.2"
        GATK       = "gatk/3.7-0"
        R          = "r/intel/3.4.2"
        SAMTOOLS   = "samtools/intel/1.3.1"
        SNPEFF     = "snpeff/4.3i"
        PICARD_JAR = "/share/apps/picard/2.8.2/picard-2.8.2.jar"
        GATK_JAR   = "/share/apps/gatk/3.7-0/GenomeAnalysisTK.jar"
        SNPEFF_JAR = "/share/apps/snpeff/4.3i/snpEff.jar"
    }

}

// This defines the resource paramters for various 'executor's
executor {
    $local { // This defines running without job submission
        cpus='1'
        memory="8GB"
    }
    $slurm {// This defines a variable that's appended to the sbatch
            // submission (I believe), so change the email if you
            // are using a different system
        clusterOptions="--mail-type=BEGIN,END,FAIL --mail-user=$USER@nyu.edu"
    }
    // TODO enter other executor types? PBS?
}

// TODO implement singularity containers
// TODO implement profiles for different executors, maybe a long
// trial-run mode that can be used to instrument one sample, then
// settings can be adjusted for running on many samples

// This defines the resources per-process (each type of block or step
// executed)
process {
    executor="slurm" // Sets default to slurm, just in case
//    executor="local"

    withName: align_to_reference {
        cpus="4"
        time="5m"
        memory="8GB"
    }

    withName: sort_and_bamize {
        cpus="1"
        time="10m"
        memory="60GB"
    }

    withName: collect_alignment_metrics {
        cpus="1"
        time="5m"
        memory="60GB"
    }

    withName: mark_duplicates {
        cpus="1"
        time="15m"
        memory="60GB"
    }

    withName: realign_around_indels {
        cpus="1"
        time="15m"
        memory="60GB"
    }

    withName: call_variants {
        cpus="1"
        time="2h"
        memory="60GB"
    }

    withName: extract_snps_and_indels {
        cpus="1"
        time="5m"
        memory="60GB"
    }

    withName: filter_snps_and_indels {
        cpus="1"
        time="5m"
        memory="4GB"
    }

    withName: base_recalibrator {
        cpus="1"
        time="30m"
        memory="60GB"
    }

    withName: covariates_analyzer {
        cpus="1"
        time="5m"
        memory="60GB"
    }

    withName: apply_bqsr {
        cpus="1"
        time="20m"
        memory="60GB"
    }

    withName: final_metrics {
        cpus="1"
        time="30m"
        memory="30GB"
    }

    withName: snpeff {
        cpus="1"
        time="5m"
        memory="60GB"
    }

}

// This defines reports and instrumentation stuff.
// It will write even if there's a file there, and will move that
// pre-existing file to a later number, so 'foo.txt' to 'foo.txt.1',
// then 'foo.txt.1' to 'foo.txt.2' (I believe).
trace { // This is tracing each step
    enabled = true
    file = "reports/nextflow_pipeline_trace.txt"
    fields = "task_id,name,status,exit,realtime,%cpu,rss"
}
report { // This is a pretty report
    enabled = true
    file = "reports/nextflow_report.html"
}
timeline { // This is a pretty cool graphic
    enabled = true
    file = "reports/nextflow_timeline.html"
}
dag { // Graph of what's done
    enabled = true
    file = "reports/nextflow_dag.png"
}

// Ignore me, this block is for vim users to set syntax right:
// vim: syntax=groovy
// -*- mode: groovy;-*-
